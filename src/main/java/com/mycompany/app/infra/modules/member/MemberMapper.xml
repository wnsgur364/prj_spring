<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis,org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.mycompany.app.infra.modules.member.MemberMapper">

	<resultMap id="resultMapObj" type="com.mycompany.app.infra.modules.member.Member"></resultMap>
					
	<sql id="member">
		seq,
		delNy,
		id,
		name,
		gender,
		pw,
		email,
		phone,
		level
	</sql>
	
	<sql id="selectCommon">
		FROM 
			member
		WHERE 1=1
			<if test="shKeyword != null and !shKeyword.equals('')">
	            AND (
	                b.id LIKE CONCAT('%',#{shKeyword},'%')
	                OR name LIKE CONCAT('%',#{shKeyword},'%')
	                OR email LIKE CONCAT('%',#{shKeyword},'%')
	               	OR phone LIKE CONCAT('%',#{shKeyword},'%')
	               	OR gender LIKE CONCAT('%',#{shKeyword},'%')
	               	OR level LIKE CONCAT('%',#{shKeyword},'%')
	            )
        	</if>
			<choose>
				<when test="shOption == 1">AND id LIKE CONCAT('%',#{shKeyword},'%')</when>
				<when test="shOption == 2">AND name LIKE CONCAT('%',#{shKeyword},'%')</when>
				<when test="shOption == 3">AND email LIKE CONCAT('%',#{shKeyword},'%')</when>
				<when test="shOption == 4">AND phone LIKE CONCAT('%',#{shKeyword},'%')</when>
				<when test="shOption == 5">AND gender LIKE CONCAT('%',#{shKeyword},'%')</when>
				<when test="shOption == 6">AND level LIKE CONCAT('%',#{shKeyword},'%')</when>
			</choose>		
	</sql>
	
   	<select id="selectOneCount" resultType="Integer">
		SELECT count(*)
		<include refid="selectCommon" />
	</select>
	
	<select id="selectList" resultMap="resultMapObj">
		SELECT m.* FROM (
			SELECT
				<include refid="member" />
				<include refid="selectCommon" />
		) m
		WHERE delNy = 0
		LIMIT #{rowNumToShow} OFFSET #{startRnumForMysql}
	</select> 

	<select id="selectOne" resultMap="resultMapObj">
		SELECT 
		  	<include refid="member" /> 
		FROM 
		  	member 
		WHERE 1=1
	  		AND seq = #{seq}
	</select>
	
	<select id="loginProc" resultMap="resultMapObj">
		SELECT 
		  	seq,
		  	id,
		  	name
		FROM 
		  	member 
		WHERE 1=1
	  		AND id = #{id}
	  		AND pw = #{pw}
	</select>
	
		<select id="loginXdmProc" resultMap="resultMapObj">
		SELECT 
		  	seq,
		  	id,
		  	name,
		  	level
		FROM 
		  	member 
		WHERE 1=1
	  		AND id = #{id}
	  		AND pw = #{pw}
	</select>
	
    <update id="update">
        UPDATE 
        	member
        SET 
        	id = #{id},
        	name = #{name},
        	pw = #{pw},
        	gender = #{gender},
			email = #{email},
			phone = #{phone},
			level = #{level}
        WHERE 
        	seq = #{seq}
    </update>

	<insert id="insert">
 		INSERT INTO member (
 			delNy,
 			id,
			name,
			gender,
			pw,
			email,
			phone,
			level
    	) VALUES (
    		0,
    		#{id},
    		#{name},
    		#{gender},
    		#{pw},
    		#{email},
    		#{phone},
    		#{level}
		)
	</insert>
     
    <update id="uelete">
        UPDATE 
        	member
       	SET
			delNy = "1"
		WHERE				
		 	seq = #{seq}
    </update>
    
   	<select id="selectOneIdCheck" resultType="Integer">
		SELECT
			COUNT(seq)
		FROM
			member
		WHERE 1=1
			AND id = #{id}
	</select>
	
    <select id="getMemberSeqBySessionId" resultType="java.lang.String">
        SELECT 
        	seq 
        FROM 
        	member 
        WHERE 
        	id = #{sessionId}
    </select>
	
	<select id="selectListUploaded" resultMap="resultMapObj">
		SELECT 
			seq
			,type
			,defaultNy
			,sort
			,path
			,originalName
			,uuidName
		FROM kokoabank.memberUploaded
		WHERE 1=1
			AND delNy = 0
			AND pseq = #{seq}
		ORDER BY
			type, sort
	</select>
    
</mapper>