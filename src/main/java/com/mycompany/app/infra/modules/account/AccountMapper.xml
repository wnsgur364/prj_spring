<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis,org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.mycompany.app.infra.modules.account.AccountMapper">
								 <!-- select 결과를 받을 객체 -->
	<resultMap id="resultMapObj" type="com.mycompany.app.infra.modules.account.Account"></resultMap>
					
	<sql id="account">
		a.seq,
		a.delNy,
		a.defaultNy,
		a.accountNumber,
		a.accountName,
		a.accountPassword,
		a.accountBalance,
		b.id,
		b.name
	</sql>
	
	<sql id="selectCommon">
		FROM 
			account a
				LEFT JOIN member b ON b.delNy = 0 AND b.seq = a.member_seq
		WHERE 1=1
	        <if test="shKeyword != null and !shKeyword.equals('')">
	            AND (
	                b.name LIKE CONCAT('%',#{shKeyword},'%')
	                OR a.accountNumber LIKE CONCAT('%',#{shKeyword},'%')
	                OR a.accountName LIKE CONCAT('%',#{shKeyword},'%')
	               	OR b.id LIKE CONCAT('%',#{shKeyword},'%')
	               	OR b.name LIKE CONCAT('%',#{shKeyword},'%')
	            )
        	</if>
			<choose>
				<when test="shOption == 1">AND a.accountNumber LIKE CONCAT('%',#{shKeyword},'%')</when>
				<when test="shOption == 2">AND a.accountName LIKE CONCAT('%',#{shKeyword},'%')</when>
				<when test="shOption == 3">AND b.id LIKE CONCAT('%',#{shKeyword},'%')</when>
				<when test="shOption == 4">AND b.name LIKE CONCAT('%',#{shKeyword},'%')</when>
			</choose>
	</sql>
	
   	<select id="selectOneCount" resultType="Integer">
		SELECT count(*)
		<include refid="selectCommon" />
	</select>
	
	<select id="selectList" resultMap="resultMapObj">
		SELECT a.* FROM (
			SELECT
				<include refid="account" />
				<include refid="selectCommon" />
			) a
		WHERE delNy = 0
		LIMIT #{rowNumToShow} OFFSET #{startRnumForMysql}
	</select> 
	
	<select id="selectOne" resultMap="resultMapObj">
		SELECT 
  			seq,
			delNy,
			defaultNy,
			accountNumber,
			accountName,
			accountPassword,
			accountBalance,
			member_seq
		FROM 
		  	account
		WHERE 1=1
	  		AND seq = #{seq}
	</select>
	
    <update id="update">
        UPDATE 
        	account
        SET 
   			defaultNy = #{defaultNy},
   			accountNumber = #{accountNumber},
			accountName = #{accountName},
			accountPassword = #{accountPassword},
			accountBalance = #{accountBalance},
        	member_seq = #{member_seq}
        WHERE 
        	seq = #{seq}
    </update>

	<insert id="insert">
 		INSERT INTO account (
 			delNy,
 			defaultNy,
 			accountNumber,
 			accountName,
 			accountPassword,
 			accountBalance,
 			member_seq
    	) VALUES (
    		0, 
    		#{defaultNy},
    		#{accountNumber},
    		#{accountName},
   			#{accountPassword},
   			#{accountBalance},
    		#{member_seq}
		)
	</insert>
     
    <update id="uelete">
        UPDATE 
        	account
       	SET
			delNy = "1"
		WHERE				
		 	seq = #{seq}
    </update>
    
   	<insert id="accountAdd">
 		INSERT INTO account (
 			delNy,
 			defaultNy,
 			accountNumber,
 			accountName,
 			accountPassword,
			accountBalance,
 			member_seq
    	) VALUES (
    		0, 
    		#{defaultNy},
    		#{accountNumber},
    		#{accountName},
   			#{accountPassword},
   			0,
    		#{member_seq}
		)
	</insert>
    
    <select id="getAccountSeqByMemberSeq" resultType="java.lang.String">
        SELECT
         	seq
        FROM
           	account
        WHERE
       		member_seq = #{memberSeq}
    </select>
    
</mapper>