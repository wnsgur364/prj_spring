<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis,org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.mycompany.app.infra.modules.transaction.TransactionMapper">
								 <!-- select 결과를 받을 객체 -->
	<resultMap id="resultMapObj" type="com.mycompany.app.infra.modules.transaction.Transaction"></resultMap>
					
	<sql id="transaction">
		a.seq,
		a.delNy,
		a.defaultNy,
		a.recipientAccountNumber,
		a.balance,
		a.date,
		a.contents,
		b.accountNumber,
		a.remainingBalance,
		b.accountBalance
	</sql>
	
	<sql id="selectCommon">
		FROM 
			transaction a
				LEFT JOIN account b ON b.delNy = 0 AND b.seq = a.account_seq
		WHERE 1=1
			<if test="shKeyword != null and !shKeyword.equals('')">
	            AND (
	                b.accountNumber LIKE CONCAT('%',#{shKeyword},'%')
	                OR a.recipientAccountNumber LIKE CONCAT('%',#{shKeyword},'%')
	               	OR a.balance LIKE CONCAT('%',#{shKeyword},'%')
	               	OR a.date LIKE CONCAT('%',#{shKeyword},'%')
	            )
        	</if>
			<choose>
				<when test="shOption == 1">AND b.accountNumber LIKE CONCAT('%',#{shKeyword},'%')</when>
				<when test="shOption == 2">AND a.recipientAccountNumber LIKE CONCAT('%',#{shKeyword},'%')</when>
				<when test="shOption == 3">AND a.balance LIKE CONCAT('%',#{shKeyword},'%')</when>
				<when test="shOption == 4">AND a.date LIKE CONCAT('%',#{shKeyword},'%')</when>
			</choose>
	</sql>
	
   	<select id="selectOneCount" resultType="Integer">
		SELECT count(*)
		<include refid="selectCommon" />
	</select>
	
	<select id="selectList" resultMap="resultMapObj">
		SELECT t.* FROM (
			SELECT
				<include refid="transaction" />
				<include refid="selectCommon" />
			) t
		WHERE delNy = 0
		LIMIT #{rowNumToShow} OFFSET #{startRnumForMysql}
	</select> 
	
	<select id="selectOne" resultMap="resultMapObj">
		SELECT t.* FROM (
			SELECT
		  		<include refid="transaction" />
		  		<include refid="selectCommon" />
		  	) t
		WHERE 1=1
	  		AND seq = #{seq}
	</select>
	
    <update id="update">
        UPDATE 
        	transaction
        SET 
        	defaultNy = #{defaultNy},
   			recipientAccountNumber = #{recipientAccountNumber},
			balance = #{balance},
			contents = #{contents},
			account_seq = #{account_seq}
        WHERE 
        	seq = #{seq}
    </update>

	<insert id="insert">
 		INSERT INTO transaction (
			delNy,
			defaultNy,
			recipientAccountNumber,
			balance,
			date,
			contents,
			account_seq
    	) VALUES (
    		0, 
    		#{defaultNy},
    		#{recipientAccountNumber},
    		#{balance},
    		now(),
   			#{contents},
    		#{account_seq}
		)
	</insert>
     
    <update id="uelete">
        UPDATE 
        	transaction
       	SET
			delNy = "1"
		WHERE				
		 	seq = #{seq}
    </update>
    
	<insert id="withdraw">
	    INSERT INTO transaction (
	        delNy,
	        defaultNy,
	        balance,
	        date,
	        contents,
	        recipientAccountNumber,
	        account_seq,
	        remainingBalance
	    ) VALUES (
	        0,
	        7,
	        #{balance},
	        NOW(),
	        #{contents},
	        #{recipientAccountNumber},
	        #{account_seq},
	        (SELECT 
	        	accountBalance 
	        FROM 
	        	account 
	        WHERE 
	        	seq = #{account_seq}) - #{balance}
	    )
	</insert>
	
	<insert id="deposit">
	    INSERT INTO transaction (
	        delNy,
	        defaultNy,
	        balance,
	        date,
	        contents,
	        account_seq,
	        remainingBalance
	    ) VALUES (
	        0,
	        6,
	        #{balance},
	        NOW(),
	        #{contents},
	        #{account_seq},
	        (SELECT 
	        	accountBalance 
	        FROM 
	        	account 
	        WHERE 
	        	seq = #{account_seq}) + #{balance}
	    )
	</insert>
	
	<update id="updateAccountBalanceForWithdraw" parameterType="com.mycompany.app.infra.modules.transaction.Transaction">
	    UPDATE 
	    	account
	    SET 
	    	accountBalance = accountBalance - #{balance}
	    WHERE 
	    	seq = #{account_seq};
	</update>

	<update id="updateAccountBalanceForDeposit" parameterType="com.mycompany.app.infra.modules.transaction.Transaction">
	    UPDATE 
	    	account
	    SET 
	    	accountBalance = accountBalance + #{balance}
	    WHERE 
	    	seq = #{account_seq};
	</update>
    
</mapper>